// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 15.1.1 Build 189 12/02/2015 SJ Lite Edition"

// DATE "02/21/2017 17:54:52"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Mux2_1 (
	sel,
	dataln0,
	dataln1,
	\output );
input 	sel;
input 	dataln0;
input 	dataln1;
output 	\output ;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \output~output_o ;
wire \dataln1~input_o ;
wire \dataln0~input_o ;
wire \sel~input_o ;
wire \output~0_combout ;


cycloneive_io_obuf \output~output (
	.i(\output~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\output~output_o ),
	.obar());
// synopsys translate_off
defparam \output~output .bus_hold = "false";
defparam \output~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \dataln1~input (
	.i(dataln1),
	.ibar(gnd),
	.o(\dataln1~input_o ));
// synopsys translate_off
defparam \dataln1~input .bus_hold = "false";
defparam \dataln1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \dataln0~input (
	.i(dataln0),
	.ibar(gnd),
	.o(\dataln0~input_o ));
// synopsys translate_off
defparam \dataln0~input .bus_hold = "false";
defparam \dataln0~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \sel~input (
	.i(sel),
	.ibar(gnd),
	.o(\sel~input_o ));
// synopsys translate_off
defparam \sel~input .bus_hold = "false";
defparam \sel~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \output~0 (
// Equation(s):
// \output~0_combout  = (\sel~input_o  & (\dataln1~input_o )) # (!\sel~input_o  & ((\dataln0~input_o )))

	.dataa(\dataln1~input_o ),
	.datab(\dataln0~input_o ),
	.datac(gnd),
	.datad(\sel~input_o ),
	.cin(gnd),
	.combout(\output~0_combout ),
	.cout());
// synopsys translate_off
defparam \output~0 .lut_mask = 16'hAACC;
defparam \output~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign \output  = \output~output_o ;

endmodule
