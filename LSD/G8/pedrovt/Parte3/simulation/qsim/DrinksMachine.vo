// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 15.1.1 Build 189 12/02/2015 SJ Lite Edition"

// DATE "04/18/2017 17:51:23"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module DrinksMachine (
	reset,
	clk,
	coin_20,
	coin_50,
	drink);
input 	reset;
input 	clk;
input 	coin_20;
input 	coin_50;
output 	drink;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \drink~output_o ;
wire \clk~input_o ;
wire \coin_50~input_o ;
wire \reset~input_o ;
wire \coin_20~input_o ;
wire \pState~8_combout ;
wire \Selector0~0_combout ;
wire \pState~12_combout ;
wire \pState.S0~q ;
wire \pState~9_combout ;
wire \pState.S1~q ;
wire \pState~6_combout ;
wire \pState~10_combout ;
wire \pState~11_combout ;
wire \pState.S2~q ;
wire \pState~7_combout ;
wire \pState.S3~q ;


cycloneive_io_obuf \drink~output (
	.i(\pState.S3~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\drink~output_o ),
	.obar());
// synopsys translate_off
defparam \drink~output .bus_hold = "false";
defparam \drink~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \coin_50~input (
	.i(coin_50),
	.ibar(gnd),
	.o(\coin_50~input_o ));
// synopsys translate_off
defparam \coin_50~input .bus_hold = "false";
defparam \coin_50~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \coin_20~input (
	.i(coin_20),
	.ibar(gnd),
	.o(\coin_20~input_o ));
// synopsys translate_off
defparam \coin_20~input .bus_hold = "false";
defparam \coin_20~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \pState~8 (
// Equation(s):
// \pState~8_combout  = (\pState.S1~q  & (!\coin_50~input_o  & (!\reset~input_o  & !\coin_20~input_o )))

	.dataa(\pState.S1~q ),
	.datab(\coin_50~input_o ),
	.datac(\reset~input_o ),
	.datad(\coin_20~input_o ),
	.cin(gnd),
	.combout(\pState~8_combout ),
	.cout());
// synopsys translate_off
defparam \pState~8 .lut_mask = 16'h0002;
defparam \pState~8 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \Selector0~0 (
// Equation(s):
// \Selector0~0_combout  = (!\coin_50~input_o  & !\coin_20~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\coin_50~input_o ),
	.datad(\coin_20~input_o ),
	.cin(gnd),
	.combout(\Selector0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Selector0~0 .lut_mask = 16'h000F;
defparam \Selector0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \pState~12 (
// Equation(s):
// \pState~12_combout  = (!\pState.S3~q  & (!\reset~input_o  & ((\pState.S0~q ) # (!\Selector0~0_combout ))))

	.dataa(\pState.S3~q ),
	.datab(\reset~input_o ),
	.datac(\Selector0~0_combout ),
	.datad(\pState.S0~q ),
	.cin(gnd),
	.combout(\pState~12_combout ),
	.cout());
// synopsys translate_off
defparam \pState~12 .lut_mask = 16'h1101;
defparam \pState~12 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \pState.S0 (
	.clk(\clk~input_o ),
	.d(\pState~12_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\pState.S0~q ),
	.prn(vcc));
// synopsys translate_off
defparam \pState.S0 .is_wysiwyg = "true";
defparam \pState.S0 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \pState~9 (
// Equation(s):
// \pState~9_combout  = (\pState~8_combout ) # ((\coin_20~input_o  & (!\reset~input_o  & !\pState.S0~q )))

	.dataa(\pState~8_combout ),
	.datab(\coin_20~input_o ),
	.datac(\reset~input_o ),
	.datad(\pState.S0~q ),
	.cin(gnd),
	.combout(\pState~9_combout ),
	.cout());
// synopsys translate_off
defparam \pState~9 .lut_mask = 16'hAAAE;
defparam \pState~9 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \pState.S1 (
	.clk(\clk~input_o ),
	.d(\pState~9_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\pState.S1~q ),
	.prn(vcc));
// synopsys translate_off
defparam \pState.S1 .is_wysiwyg = "true";
defparam \pState.S1 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \pState~6 (
// Equation(s):
// \pState~6_combout  = (\coin_50~input_o  & (\pState.S1~q  & (!\reset~input_o  & !\coin_20~input_o )))

	.dataa(\coin_50~input_o ),
	.datab(\pState.S1~q ),
	.datac(\reset~input_o ),
	.datad(\coin_20~input_o ),
	.cin(gnd),
	.combout(\pState~6_combout ),
	.cout());
// synopsys translate_off
defparam \pState~6 .lut_mask = 16'h0008;
defparam \pState~6 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \pState~10 (
// Equation(s):
// \pState~10_combout  = (\coin_50~input_o  & ((!\pState.S0~q ))) # (!\coin_50~input_o  & (\pState.S2~q ))

	.dataa(\pState.S2~q ),
	.datab(gnd),
	.datac(\coin_50~input_o ),
	.datad(\pState.S0~q ),
	.cin(gnd),
	.combout(\pState~10_combout ),
	.cout());
// synopsys translate_off
defparam \pState~10 .lut_mask = 16'h0AFA;
defparam \pState~10 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \pState~11 (
// Equation(s):
// \pState~11_combout  = (!\reset~input_o  & ((\coin_20~input_o  & (\pState.S1~q )) # (!\coin_20~input_o  & ((\pState~10_combout )))))

	.dataa(\pState.S1~q ),
	.datab(\pState~10_combout ),
	.datac(\coin_20~input_o ),
	.datad(\reset~input_o ),
	.cin(gnd),
	.combout(\pState~11_combout ),
	.cout());
// synopsys translate_off
defparam \pState~11 .lut_mask = 16'h00AC;
defparam \pState~11 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \pState.S2 (
	.clk(\clk~input_o ),
	.d(\pState~11_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\pState.S2~q ),
	.prn(vcc));
// synopsys translate_off
defparam \pState.S2 .is_wysiwyg = "true";
defparam \pState.S2 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \pState~7 (
// Equation(s):
// \pState~7_combout  = (\pState~6_combout ) # ((\pState.S2~q  & (!\reset~input_o  & !\Selector0~0_combout )))

	.dataa(\pState~6_combout ),
	.datab(\pState.S2~q ),
	.datac(\reset~input_o ),
	.datad(\Selector0~0_combout ),
	.cin(gnd),
	.combout(\pState~7_combout ),
	.cout());
// synopsys translate_off
defparam \pState~7 .lut_mask = 16'hAAAE;
defparam \pState~7 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \pState.S3 (
	.clk(\clk~input_o ),
	.d(\pState~7_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\pState.S3~q ),
	.prn(vcc));
// synopsys translate_off
defparam \pState.S3 .is_wysiwyg = "true";
defparam \pState.S3 .power_up = "low";
// synopsys translate_on

assign drink = \drink~output_o ;

endmodule
