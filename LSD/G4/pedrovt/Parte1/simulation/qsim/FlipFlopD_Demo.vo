// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 15.1.1 Build 189 12/02/2015 SJ Lite Edition"

// DATE "03/06/2017 14:32:24"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module FlipFlopD (
	clk,
	d,
	reset,
	set,
	q);
input 	clk;
input 	d;
input 	reset;
input 	set;
output 	q;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \q~output_o ;
wire \clk~input_o ;
wire \d~input_o ;
wire \set~input_o ;
wire \reset~input_o ;
wire \q~0_combout ;
wire \q~reg0_q ;


cycloneive_io_obuf \q~output (
	.i(\q~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q~output_o ),
	.obar());
// synopsys translate_off
defparam \q~output .bus_hold = "false";
defparam \q~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \d~input (
	.i(d),
	.ibar(gnd),
	.o(\d~input_o ));
// synopsys translate_off
defparam \d~input .bus_hold = "false";
defparam \d~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \set~input (
	.i(set),
	.ibar(gnd),
	.o(\set~input_o ));
// synopsys translate_off
defparam \set~input .bus_hold = "false";
defparam \set~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \q~0 (
// Equation(s):
// \q~0_combout  = (!\reset~input_o  & ((\d~input_o ) # (\set~input_o )))

	.dataa(\d~input_o ),
	.datab(\set~input_o ),
	.datac(gnd),
	.datad(\reset~input_o ),
	.cin(gnd),
	.combout(\q~0_combout ),
	.cout());
// synopsys translate_off
defparam \q~0 .lut_mask = 16'h00EE;
defparam \q~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \q~reg0 (
	.clk(\clk~input_o ),
	.d(\q~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\q~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \q~reg0 .is_wysiwyg = "true";
defparam \q~reg0 .power_up = "low";
// synopsys translate_on

assign q = \q~output_o ;

endmodule
