// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 15.1.1 Build 189 12/02/2015 SJ Lite Edition"

// DATE "11/30/2017 19:02:16"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module ControlUnit (
	Clock,
	Reset,
	OpCode,
	STATE,
	PCWrite,
	IRWrite,
	IorD,
	PCSource,
	RegDest,
	PCWriteCond,
	MemRead,
	MemWrite,
	MemToReg,
	ALUSelA,
	ALUSelB,
	RegWrite,
	ALUop);
input 	Clock;
input 	Reset;
input 	[5:0] OpCode;
output 	[3:0] STATE;
output 	PCWrite;
output 	IRWrite;
output 	IorD;
output 	[1:0] PCSource;
output 	RegDest;
output 	PCWriteCond;
output 	MemRead;
output 	MemWrite;
output 	MemToReg;
output 	ALUSelA;
output 	[1:0] ALUSelB;
output 	RegWrite;
output 	[1:0] ALUop;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \STATE[0]~output_o ;
wire \STATE[1]~output_o ;
wire \STATE[2]~output_o ;
wire \STATE[3]~output_o ;
wire \PCWrite~output_o ;
wire \IRWrite~output_o ;
wire \IorD~output_o ;
wire \PCSource[0]~output_o ;
wire \PCSource[1]~output_o ;
wire \RegDest~output_o ;
wire \PCWriteCond~output_o ;
wire \MemRead~output_o ;
wire \MemWrite~output_o ;
wire \MemToReg~output_o ;
wire \ALUSelA~output_o ;
wire \ALUSelB[0]~output_o ;
wire \ALUSelB[1]~output_o ;
wire \RegWrite~output_o ;
wire \ALUop[0]~output_o ;
wire \ALUop[1]~output_o ;
wire \Clock~input_o ;
wire \OpCode[5]~input_o ;
wire \OpCode[1]~input_o ;
wire \OpCode[0]~input_o ;
wire \OpCode[2]~input_o ;
wire \OpCode[4]~input_o ;
wire \Equal1~0_combout ;
wire \CS~15_combout ;
wire \OpCode[3]~input_o ;
wire \Equal0~0_combout ;
wire \CS~26_combout ;
wire \Equal3~0_combout ;
wire \CS~27_combout ;
wire \Equal6~0_combout ;
wire \Equal5~0_combout ;
wire \Reset~input_o ;
wire \process_1~2_combout ;
wire \CS~17_combout ;
wire \CS.E10~q ;
wire \Equal0~1_combout ;
wire \CS~19_combout ;
wire \CS.E6~q ;
wire \CS~31_combout ;
wire \CS.E7~q ;
wire \CS~32_combout ;
wire \CS.E11~q ;
wire \CS~18_combout ;
wire \CS.E2~q ;
wire \CS~29_combout ;
wire \CS~30_combout ;
wire \CS.E3~q ;
wire \CS~20_combout ;
wire \CS.E4~q ;
wire \CS~23_combout ;
wire \CS.E9~q ;
wire \CS~24_combout ;
wire \CS~25_combout ;
wire \CS.E5~q ;
wire \CS~21_combout ;
wire \CS~22_combout ;
wire \CS.E0~q ;
wire \CS~28_combout ;
wire \CS.E1~q ;
wire \Equal4~0_combout ;
wire \CS~16_combout ;
wire \CS.E8~q ;
wire \WideOr8~0_combout ;
wire \STATE~0_combout ;
wire \CS~14_combout ;
wire \STATE~1_combout ;
wire \STATE~2_combout ;
wire \STATE~3_combout ;
wire \STATE~4_combout ;
wire \STATE~5_combout ;
wire \PCWrite~0_combout ;
wire \IorD~0_combout ;
wire \MemRead~0_combout ;
wire \ALUSelB~0_combout ;
wire \WideOr0~combout ;
wire \WideOr9~0_combout ;
wire \WideOr8~1_combout ;
wire \ALUop~0_combout ;


cycloneive_io_obuf \STATE[0]~output (
	.i(\STATE~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\STATE[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \STATE[0]~output .bus_hold = "false";
defparam \STATE[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \STATE[1]~output (
	.i(\STATE~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\STATE[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \STATE[1]~output .bus_hold = "false";
defparam \STATE[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \STATE[2]~output (
	.i(\STATE~4_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\STATE[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \STATE[2]~output .bus_hold = "false";
defparam \STATE[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \STATE[3]~output (
	.i(!\STATE~5_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\STATE[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \STATE[3]~output .bus_hold = "false";
defparam \STATE[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \PCWrite~output (
	.i(\PCWrite~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\PCWrite~output_o ),
	.obar());
// synopsys translate_off
defparam \PCWrite~output .bus_hold = "false";
defparam \PCWrite~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \IRWrite~output (
	.i(!\CS.E0~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\IRWrite~output_o ),
	.obar());
// synopsys translate_off
defparam \IRWrite~output .bus_hold = "false";
defparam \IRWrite~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \IorD~output (
	.i(\IorD~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\IorD~output_o ),
	.obar());
// synopsys translate_off
defparam \IorD~output .bus_hold = "false";
defparam \IorD~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \PCSource[0]~output (
	.i(\CS.E10~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\PCSource[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \PCSource[0]~output .bus_hold = "false";
defparam \PCSource[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \PCSource[1]~output (
	.i(\CS.E11~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\PCSource[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \PCSource[1]~output .bus_hold = "false";
defparam \PCSource[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \RegDest~output (
	.i(\CS.E7~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\RegDest~output_o ),
	.obar());
// synopsys translate_off
defparam \RegDest~output .bus_hold = "false";
defparam \RegDest~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \PCWriteCond~output (
	.i(\CS.E10~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\PCWriteCond~output_o ),
	.obar());
// synopsys translate_off
defparam \PCWriteCond~output .bus_hold = "false";
defparam \PCWriteCond~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \MemRead~output (
	.i(!\MemRead~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\MemRead~output_o ),
	.obar());
// synopsys translate_off
defparam \MemRead~output .bus_hold = "false";
defparam \MemRead~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \MemWrite~output (
	.i(\CS.E5~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\MemWrite~output_o ),
	.obar());
// synopsys translate_off
defparam \MemWrite~output .bus_hold = "false";
defparam \MemWrite~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \MemToReg~output (
	.i(\CS.E4~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\MemToReg~output_o ),
	.obar());
// synopsys translate_off
defparam \MemToReg~output .bus_hold = "false";
defparam \MemToReg~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \ALUSelA~output (
	.i(!\WideOr8~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ALUSelA~output_o ),
	.obar());
// synopsys translate_off
defparam \ALUSelA~output .bus_hold = "false";
defparam \ALUSelA~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \ALUSelB[0]~output (
	.i(\ALUSelB~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ALUSelB[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \ALUSelB[0]~output .bus_hold = "false";
defparam \ALUSelB[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \ALUSelB[1]~output (
	.i(\WideOr0~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ALUSelB[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \ALUSelB[1]~output .bus_hold = "false";
defparam \ALUSelB[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \RegWrite~output (
	.i(!\WideOr9~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\RegWrite~output_o ),
	.obar());
// synopsys translate_off
defparam \RegWrite~output .bus_hold = "false";
defparam \RegWrite~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \ALUop[0]~output (
	.i(!\WideOr8~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ALUop[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \ALUop[0]~output .bus_hold = "false";
defparam \ALUop[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \ALUop[1]~output (
	.i(\ALUop~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ALUop[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \ALUop[1]~output .bus_hold = "false";
defparam \ALUop[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \Clock~input (
	.i(Clock),
	.ibar(gnd),
	.o(\Clock~input_o ));
// synopsys translate_off
defparam \Clock~input .bus_hold = "false";
defparam \Clock~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \OpCode[5]~input (
	.i(OpCode[5]),
	.ibar(gnd),
	.o(\OpCode[5]~input_o ));
// synopsys translate_off
defparam \OpCode[5]~input .bus_hold = "false";
defparam \OpCode[5]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \OpCode[1]~input (
	.i(OpCode[1]),
	.ibar(gnd),
	.o(\OpCode[1]~input_o ));
// synopsys translate_off
defparam \OpCode[1]~input .bus_hold = "false";
defparam \OpCode[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \OpCode[0]~input (
	.i(OpCode[0]),
	.ibar(gnd),
	.o(\OpCode[0]~input_o ));
// synopsys translate_off
defparam \OpCode[0]~input .bus_hold = "false";
defparam \OpCode[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \OpCode[2]~input (
	.i(OpCode[2]),
	.ibar(gnd),
	.o(\OpCode[2]~input_o ));
// synopsys translate_off
defparam \OpCode[2]~input .bus_hold = "false";
defparam \OpCode[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \OpCode[4]~input (
	.i(OpCode[4]),
	.ibar(gnd),
	.o(\OpCode[4]~input_o ));
// synopsys translate_off
defparam \OpCode[4]~input .bus_hold = "false";
defparam \OpCode[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \Equal1~0 (
// Equation(s):
// \Equal1~0_combout  = (\OpCode[1]~input_o  & (\OpCode[0]~input_o  & (!\OpCode[2]~input_o  & !\OpCode[4]~input_o )))

	.dataa(\OpCode[1]~input_o ),
	.datab(\OpCode[0]~input_o ),
	.datac(\OpCode[2]~input_o ),
	.datad(\OpCode[4]~input_o ),
	.cin(gnd),
	.combout(\Equal1~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal1~0 .lut_mask = 16'h0008;
defparam \Equal1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \CS~15 (
// Equation(s):
// \CS~15_combout  = (!\Equal1~0_combout ) # (!\OpCode[5]~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\OpCode[5]~input_o ),
	.datad(\Equal1~0_combout ),
	.cin(gnd),
	.combout(\CS~15_combout ),
	.cout());
// synopsys translate_off
defparam \CS~15 .lut_mask = 16'h0FFF;
defparam \CS~15 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \OpCode[3]~input (
	.i(OpCode[3]),
	.ibar(gnd),
	.o(\OpCode[3]~input_o ));
// synopsys translate_off
defparam \OpCode[3]~input .bus_hold = "false";
defparam \OpCode[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = (!\OpCode[0]~input_o  & (!\OpCode[4]~input_o  & !\OpCode[5]~input_o ))

	.dataa(gnd),
	.datab(\OpCode[0]~input_o ),
	.datac(\OpCode[4]~input_o ),
	.datad(\OpCode[5]~input_o ),
	.cin(gnd),
	.combout(\Equal0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal0~0 .lut_mask = 16'h0003;
defparam \Equal0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \CS~26 (
// Equation(s):
// \CS~26_combout  = ((\OpCode[3]~input_o  & ((\OpCode[2]~input_o ) # (!\OpCode[1]~input_o ))) # (!\OpCode[3]~input_o  & ((\OpCode[1]~input_o )))) # (!\Equal0~0_combout )

	.dataa(\OpCode[2]~input_o ),
	.datab(\OpCode[3]~input_o ),
	.datac(\OpCode[1]~input_o ),
	.datad(\Equal0~0_combout ),
	.cin(gnd),
	.combout(\CS~26_combout ),
	.cout());
// synopsys translate_off
defparam \CS~26 .lut_mask = 16'hBCFF;
defparam \CS~26 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \Equal3~0 (
// Equation(s):
// \Equal3~0_combout  = (\OpCode[3]~input_o  & (\Equal0~0_combout  & (!\OpCode[1]~input_o  & !\OpCode[2]~input_o )))

	.dataa(\OpCode[3]~input_o ),
	.datab(\Equal0~0_combout ),
	.datac(\OpCode[1]~input_o ),
	.datad(\OpCode[2]~input_o ),
	.cin(gnd),
	.combout(\Equal3~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal3~0 .lut_mask = 16'h0008;
defparam \Equal3~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \CS~27 (
// Equation(s):
// \CS~27_combout  = (\CS.E1~q  & (\CS~15_combout  & (\CS~26_combout  & !\Equal3~0_combout )))

	.dataa(\CS.E1~q ),
	.datab(\CS~15_combout ),
	.datac(\CS~26_combout ),
	.datad(\Equal3~0_combout ),
	.cin(gnd),
	.combout(\CS~27_combout ),
	.cout());
// synopsys translate_off
defparam \CS~27 .lut_mask = 16'h0080;
defparam \CS~27 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \Equal6~0 (
// Equation(s):
// \Equal6~0_combout  = (\OpCode[1]~input_o  & (\Equal0~0_combout  & (!\OpCode[3]~input_o  & !\OpCode[2]~input_o )))

	.dataa(\OpCode[1]~input_o ),
	.datab(\Equal0~0_combout ),
	.datac(\OpCode[3]~input_o ),
	.datad(\OpCode[2]~input_o ),
	.cin(gnd),
	.combout(\Equal6~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal6~0 .lut_mask = 16'h0008;
defparam \Equal6~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \Equal5~0 (
// Equation(s):
// \Equal5~0_combout  = (\OpCode[2]~input_o  & (\Equal0~0_combout  & (!\OpCode[3]~input_o  & !\OpCode[1]~input_o )))

	.dataa(\OpCode[2]~input_o ),
	.datab(\Equal0~0_combout ),
	.datac(\OpCode[3]~input_o ),
	.datad(\OpCode[1]~input_o ),
	.cin(gnd),
	.combout(\Equal5~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal5~0 .lut_mask = 16'h0008;
defparam \Equal5~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \Reset~input (
	.i(Reset),
	.ibar(gnd),
	.o(\Reset~input_o ));
// synopsys translate_off
defparam \Reset~input .bus_hold = "false";
defparam \Reset~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \process_1~2 (
// Equation(s):
// \process_1~2_combout  = (\Equal3~0_combout ) # ((\OpCode[5]~input_o  & \Equal1~0_combout ))

	.dataa(\OpCode[5]~input_o ),
	.datab(\Equal1~0_combout ),
	.datac(\Equal3~0_combout ),
	.datad(gnd),
	.cin(gnd),
	.combout(\process_1~2_combout ),
	.cout());
// synopsys translate_off
defparam \process_1~2 .lut_mask = 16'hF8F8;
defparam \process_1~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \CS~17 (
// Equation(s):
// \CS~17_combout  = (\CS.E1~q  & (\Equal5~0_combout  & (!\Reset~input_o  & !\process_1~2_combout )))

	.dataa(\CS.E1~q ),
	.datab(\Equal5~0_combout ),
	.datac(\Reset~input_o ),
	.datad(\process_1~2_combout ),
	.cin(gnd),
	.combout(\CS~17_combout ),
	.cout());
// synopsys translate_off
defparam \CS~17 .lut_mask = 16'h0008;
defparam \CS~17 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \CS.E10 (
	.clk(\Clock~input_o ),
	.d(\CS~17_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CS.E10~q ),
	.prn(vcc));
// synopsys translate_off
defparam \CS.E10 .is_wysiwyg = "true";
defparam \CS.E10 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \Equal0~1 (
// Equation(s):
// \Equal0~1_combout  = (\Equal0~0_combout  & (!\OpCode[3]~input_o  & (!\OpCode[1]~input_o  & !\OpCode[2]~input_o )))

	.dataa(\Equal0~0_combout ),
	.datab(\OpCode[3]~input_o ),
	.datac(\OpCode[1]~input_o ),
	.datad(\OpCode[2]~input_o ),
	.cin(gnd),
	.combout(\Equal0~1_combout ),
	.cout());
// synopsys translate_off
defparam \Equal0~1 .lut_mask = 16'h0002;
defparam \Equal0~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \CS~19 (
// Equation(s):
// \CS~19_combout  = (\CS.E1~q  & (\Equal0~1_combout  & !\Reset~input_o ))

	.dataa(\CS.E1~q ),
	.datab(\Equal0~1_combout ),
	.datac(gnd),
	.datad(\Reset~input_o ),
	.cin(gnd),
	.combout(\CS~19_combout ),
	.cout());
// synopsys translate_off
defparam \CS~19 .lut_mask = 16'h0088;
defparam \CS~19 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \CS.E6 (
	.clk(\Clock~input_o ),
	.d(\CS~19_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CS.E6~q ),
	.prn(vcc));
// synopsys translate_off
defparam \CS.E6 .is_wysiwyg = "true";
defparam \CS.E6 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \CS~31 (
// Equation(s):
// \CS~31_combout  = (\CS.E6~q  & !\Reset~input_o )

	.dataa(\CS.E6~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(\Reset~input_o ),
	.cin(gnd),
	.combout(\CS~31_combout ),
	.cout());
// synopsys translate_off
defparam \CS~31 .lut_mask = 16'h00AA;
defparam \CS~31 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \CS.E7 (
	.clk(\Clock~input_o ),
	.d(\CS~31_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CS.E7~q ),
	.prn(vcc));
// synopsys translate_off
defparam \CS.E7 .is_wysiwyg = "true";
defparam \CS.E7 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \CS~32 (
// Equation(s):
// \CS~32_combout  = (\Equal6~0_combout  & (\CS~27_combout  & !\Reset~input_o ))

	.dataa(\Equal6~0_combout ),
	.datab(\CS~27_combout ),
	.datac(gnd),
	.datad(\Reset~input_o ),
	.cin(gnd),
	.combout(\CS~32_combout ),
	.cout());
// synopsys translate_off
defparam \CS~32 .lut_mask = 16'h0088;
defparam \CS~32 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \CS.E11 (
	.clk(\Clock~input_o ),
	.d(\CS~32_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CS.E11~q ),
	.prn(vcc));
// synopsys translate_off
defparam \CS.E11 .is_wysiwyg = "true";
defparam \CS.E11 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \CS~18 (
// Equation(s):
// \CS~18_combout  = (\CS.E1~q  & (!\Reset~input_o  & ((\Equal3~0_combout ) # (!\CS~15_combout ))))

	.dataa(\CS.E1~q ),
	.datab(\Equal3~0_combout ),
	.datac(\CS~15_combout ),
	.datad(\Reset~input_o ),
	.cin(gnd),
	.combout(\CS~18_combout ),
	.cout());
// synopsys translate_off
defparam \CS~18 .lut_mask = 16'h008A;
defparam \CS~18 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \CS.E2 (
	.clk(\Clock~input_o ),
	.d(\CS~18_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CS.E2~q ),
	.prn(vcc));
// synopsys translate_off
defparam \CS.E2 .is_wysiwyg = "true";
defparam \CS.E2 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \CS~29 (
// Equation(s):
// \CS~29_combout  = (\CS.E2~q  & !\Reset~input_o )

	.dataa(\CS.E2~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(\Reset~input_o ),
	.cin(gnd),
	.combout(\CS~29_combout ),
	.cout());
// synopsys translate_off
defparam \CS~29 .lut_mask = 16'h00AA;
defparam \CS~29 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \CS~30 (
// Equation(s):
// \CS~30_combout  = (\OpCode[5]~input_o  & (\Equal1~0_combout  & (\CS~29_combout  & !\OpCode[3]~input_o )))

	.dataa(\OpCode[5]~input_o ),
	.datab(\Equal1~0_combout ),
	.datac(\CS~29_combout ),
	.datad(\OpCode[3]~input_o ),
	.cin(gnd),
	.combout(\CS~30_combout ),
	.cout());
// synopsys translate_off
defparam \CS~30 .lut_mask = 16'h0080;
defparam \CS~30 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \CS.E3 (
	.clk(\Clock~input_o ),
	.d(\CS~30_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CS.E3~q ),
	.prn(vcc));
// synopsys translate_off
defparam \CS.E3 .is_wysiwyg = "true";
defparam \CS.E3 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \CS~20 (
// Equation(s):
// \CS~20_combout  = (\CS.E3~q  & !\Reset~input_o )

	.dataa(\CS.E3~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(\Reset~input_o ),
	.cin(gnd),
	.combout(\CS~20_combout ),
	.cout());
// synopsys translate_off
defparam \CS~20 .lut_mask = 16'h00AA;
defparam \CS~20 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \CS.E4 (
	.clk(\Clock~input_o ),
	.d(\CS~20_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CS.E4~q ),
	.prn(vcc));
// synopsys translate_off
defparam \CS.E4 .is_wysiwyg = "true";
defparam \CS.E4 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \CS~23 (
// Equation(s):
// \CS~23_combout  = (!\Reset~input_o  & ((\CS.E8~q ) # ((\CS~15_combout  & \CS.E2~q ))))

	.dataa(\CS~15_combout ),
	.datab(\CS.E8~q ),
	.datac(\Reset~input_o ),
	.datad(\CS.E2~q ),
	.cin(gnd),
	.combout(\CS~23_combout ),
	.cout());
// synopsys translate_off
defparam \CS~23 .lut_mask = 16'h0E0C;
defparam \CS~23 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \CS.E9 (
	.clk(\Clock~input_o ),
	.d(\CS~23_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CS.E9~q ),
	.prn(vcc));
// synopsys translate_off
defparam \CS.E9 .is_wysiwyg = "true";
defparam \CS.E9 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \CS~24 (
// Equation(s):
// \CS~24_combout  = (\Equal1~0_combout  & !\Reset~input_o )

	.dataa(\Equal1~0_combout ),
	.datab(\Reset~input_o ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\CS~24_combout ),
	.cout());
// synopsys translate_off
defparam \CS~24 .lut_mask = 16'h2222;
defparam \CS~24 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \CS~25 (
// Equation(s):
// \CS~25_combout  = (\OpCode[3]~input_o  & (\OpCode[5]~input_o  & (\CS.E2~q  & \CS~24_combout )))

	.dataa(\OpCode[3]~input_o ),
	.datab(\OpCode[5]~input_o ),
	.datac(\CS.E2~q ),
	.datad(\CS~24_combout ),
	.cin(gnd),
	.combout(\CS~25_combout ),
	.cout());
// synopsys translate_off
defparam \CS~25 .lut_mask = 16'h8000;
defparam \CS~25 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \CS.E5 (
	.clk(\Clock~input_o ),
	.d(\CS~25_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CS.E5~q ),
	.prn(vcc));
// synopsys translate_off
defparam \CS.E5 .is_wysiwyg = "true";
defparam \CS.E5 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \CS~21 (
// Equation(s):
// \CS~21_combout  = (\CS.E4~q ) # ((\CS.E9~q ) # ((\CS.E5~q ) # (\Reset~input_o )))

	.dataa(\CS.E4~q ),
	.datab(\CS.E9~q ),
	.datac(\CS.E5~q ),
	.datad(\Reset~input_o ),
	.cin(gnd),
	.combout(\CS~21_combout ),
	.cout());
// synopsys translate_off
defparam \CS~21 .lut_mask = 16'hFFFE;
defparam \CS~21 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \CS~22 (
// Equation(s):
// \CS~22_combout  = (!\CS.E10~q  & (!\CS.E7~q  & (!\CS.E11~q  & !\CS~21_combout )))

	.dataa(\CS.E10~q ),
	.datab(\CS.E7~q ),
	.datac(\CS.E11~q ),
	.datad(\CS~21_combout ),
	.cin(gnd),
	.combout(\CS~22_combout ),
	.cout());
// synopsys translate_off
defparam \CS~22 .lut_mask = 16'h0001;
defparam \CS~22 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \CS.E0 (
	.clk(\Clock~input_o ),
	.d(\CS~22_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CS.E0~q ),
	.prn(vcc));
// synopsys translate_off
defparam \CS.E0 .is_wysiwyg = "true";
defparam \CS.E0 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \CS~28 (
// Equation(s):
// \CS~28_combout  = (!\Reset~input_o  & (((\CS~27_combout  & !\Equal6~0_combout )) # (!\CS.E0~q )))

	.dataa(\CS~27_combout ),
	.datab(\Equal6~0_combout ),
	.datac(\CS.E0~q ),
	.datad(\Reset~input_o ),
	.cin(gnd),
	.combout(\CS~28_combout ),
	.cout());
// synopsys translate_off
defparam \CS~28 .lut_mask = 16'h002F;
defparam \CS~28 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \CS.E1 (
	.clk(\Clock~input_o ),
	.d(\CS~28_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CS.E1~q ),
	.prn(vcc));
// synopsys translate_off
defparam \CS.E1 .is_wysiwyg = "true";
defparam \CS.E1 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \Equal4~0 (
// Equation(s):
// \Equal4~0_combout  = (\OpCode[3]~input_o  & (\OpCode[1]~input_o  & (\Equal0~0_combout  & !\OpCode[2]~input_o )))

	.dataa(\OpCode[3]~input_o ),
	.datab(\OpCode[1]~input_o ),
	.datac(\Equal0~0_combout ),
	.datad(\OpCode[2]~input_o ),
	.cin(gnd),
	.combout(\Equal4~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal4~0 .lut_mask = 16'h0080;
defparam \Equal4~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \CS~16 (
// Equation(s):
// \CS~16_combout  = (\CS.E1~q  & (\Equal4~0_combout  & (!\Reset~input_o  & !\process_1~2_combout )))

	.dataa(\CS.E1~q ),
	.datab(\Equal4~0_combout ),
	.datac(\Reset~input_o ),
	.datad(\process_1~2_combout ),
	.cin(gnd),
	.combout(\CS~16_combout ),
	.cout());
// synopsys translate_off
defparam \CS~16 .lut_mask = 16'h0008;
defparam \CS~16 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \CS.E8 (
	.clk(\Clock~input_o ),
	.d(\CS~16_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\CS.E8~q ),
	.prn(vcc));
// synopsys translate_off
defparam \CS.E8 .is_wysiwyg = "true";
defparam \CS.E8 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \WideOr8~0 (
// Equation(s):
// \WideOr8~0_combout  = (!\CS.E8~q  & (!\CS.E10~q  & (!\CS.E2~q  & !\CS.E6~q )))

	.dataa(\CS.E8~q ),
	.datab(\CS.E10~q ),
	.datac(\CS.E2~q ),
	.datad(\CS.E6~q ),
	.cin(gnd),
	.combout(\WideOr8~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr8~0 .lut_mask = 16'h0001;
defparam \WideOr8~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \STATE~0 (
// Equation(s):
// \STATE~0_combout  = \CS.E0~q  $ (((\CS.E4~q ) # (!\WideOr8~0_combout )))

	.dataa(\WideOr8~0_combout ),
	.datab(gnd),
	.datac(\CS.E4~q ),
	.datad(\CS.E0~q ),
	.cin(gnd),
	.combout(\STATE~0_combout ),
	.cout());
// synopsys translate_off
defparam \STATE~0 .lut_mask = 16'h0AF5;
defparam \STATE~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \CS~14 (
// Equation(s):
// \CS~14_combout  = (!\CS.E4~q  & (!\CS.E9~q  & !\CS.E5~q ))

	.dataa(gnd),
	.datab(\CS.E4~q ),
	.datac(\CS.E9~q ),
	.datad(\CS.E5~q ),
	.cin(gnd),
	.combout(\CS~14_combout ),
	.cout());
// synopsys translate_off
defparam \CS~14 .lut_mask = 16'h0003;
defparam \CS~14 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \STATE~1 (
// Equation(s):
// \STATE~1_combout  = \CS.E0~q  $ ((((\CS.E8~q ) # (\CS.E1~q )) # (!\CS~14_combout )))

	.dataa(\CS~14_combout ),
	.datab(\CS.E8~q ),
	.datac(\CS.E1~q ),
	.datad(\CS.E0~q ),
	.cin(gnd),
	.combout(\STATE~1_combout ),
	.cout());
// synopsys translate_off
defparam \STATE~1 .lut_mask = 16'h02FD;
defparam \STATE~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \STATE~2 (
// Equation(s):
// \STATE~2_combout  = (\CS.E0~q  & (!\CS.E2~q  & (!\CS.E1~q  & !\CS.E3~q )))

	.dataa(\CS.E0~q ),
	.datab(\CS.E2~q ),
	.datac(\CS.E1~q ),
	.datad(\CS.E3~q ),
	.cin(gnd),
	.combout(\STATE~2_combout ),
	.cout());
// synopsys translate_off
defparam \STATE~2 .lut_mask = 16'h0002;
defparam \STATE~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \STATE~3 (
// Equation(s):
// \STATE~3_combout  = (\CS.E4~q ) # ((\CS.E6~q ) # ((\CS.E5~q ) # (!\STATE~2_combout )))

	.dataa(\CS.E4~q ),
	.datab(\CS.E6~q ),
	.datac(\CS.E5~q ),
	.datad(\STATE~2_combout ),
	.cin(gnd),
	.combout(\STATE~3_combout ),
	.cout());
// synopsys translate_off
defparam \STATE~3 .lut_mask = 16'hFEFF;
defparam \STATE~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \STATE~4 (
// Equation(s):
// \STATE~4_combout  = (\STATE~3_combout  & (\STATE~2_combout )) # (!\STATE~3_combout  & ((\CS.E7~q )))

	.dataa(\STATE~2_combout ),
	.datab(\CS.E7~q ),
	.datac(gnd),
	.datad(\STATE~3_combout ),
	.cin(gnd),
	.combout(\STATE~4_combout ),
	.cout());
// synopsys translate_off
defparam \STATE~4 .lut_mask = 16'hAACC;
defparam \STATE~4 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \STATE~5 (
// Equation(s):
// \STATE~5_combout  = (\CS.E7~q ) # (\STATE~3_combout )

	.dataa(\CS.E7~q ),
	.datab(\STATE~3_combout ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\STATE~5_combout ),
	.cout());
// synopsys translate_off
defparam \STATE~5 .lut_mask = 16'hEEEE;
defparam \STATE~5 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \PCWrite~0 (
// Equation(s):
// \PCWrite~0_combout  = (\CS.E11~q ) # (!\CS.E0~q )

	.dataa(\CS.E11~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(\CS.E0~q ),
	.cin(gnd),
	.combout(\PCWrite~0_combout ),
	.cout());
// synopsys translate_off
defparam \PCWrite~0 .lut_mask = 16'hAAFF;
defparam \PCWrite~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \IorD~0 (
// Equation(s):
// \IorD~0_combout  = (\CS.E5~q ) # (\CS.E3~q )

	.dataa(\CS.E5~q ),
	.datab(\CS.E3~q ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\IorD~0_combout ),
	.cout());
// synopsys translate_off
defparam \IorD~0 .lut_mask = 16'hEEEE;
defparam \IorD~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \MemRead~0 (
// Equation(s):
// \MemRead~0_combout  = (\CS.E0~q  & !\CS.E3~q )

	.dataa(\CS.E0~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(\CS.E3~q ),
	.cin(gnd),
	.combout(\MemRead~0_combout ),
	.cout());
// synopsys translate_off
defparam \MemRead~0 .lut_mask = 16'h00AA;
defparam \MemRead~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \ALUSelB~0 (
// Equation(s):
// \ALUSelB~0_combout  = (\CS.E1~q ) # (!\CS.E0~q )

	.dataa(\CS.E1~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(\CS.E0~q ),
	.cin(gnd),
	.combout(\ALUSelB~0_combout ),
	.cout());
// synopsys translate_off
defparam \ALUSelB~0 .lut_mask = 16'hAAFF;
defparam \ALUSelB~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb WideOr0(
// Equation(s):
// \WideOr0~combout  = (\CS.E8~q ) # ((\CS.E2~q ) # (\CS.E1~q ))

	.dataa(\CS.E8~q ),
	.datab(\CS.E2~q ),
	.datac(\CS.E1~q ),
	.datad(gnd),
	.cin(gnd),
	.combout(\WideOr0~combout ),
	.cout());
// synopsys translate_off
defparam WideOr0.lut_mask = 16'hFEFE;
defparam WideOr0.sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \WideOr9~0 (
// Equation(s):
// \WideOr9~0_combout  = (!\CS.E4~q  & (!\CS.E9~q  & !\CS.E7~q ))

	.dataa(gnd),
	.datab(\CS.E4~q ),
	.datac(\CS.E9~q ),
	.datad(\CS.E7~q ),
	.cin(gnd),
	.combout(\WideOr9~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr9~0 .lut_mask = 16'h0003;
defparam \WideOr9~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \WideOr8~1 (
// Equation(s):
// \WideOr8~1_combout  = (!\CS.E8~q  & !\CS.E10~q )

	.dataa(gnd),
	.datab(gnd),
	.datac(\CS.E8~q ),
	.datad(\CS.E10~q ),
	.cin(gnd),
	.combout(\WideOr8~1_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr8~1 .lut_mask = 16'h000F;
defparam \WideOr8~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \ALUop~0 (
// Equation(s):
// \ALUop~0_combout  = (\CS.E8~q ) # (\CS.E6~q )

	.dataa(\CS.E8~q ),
	.datab(\CS.E6~q ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\ALUop~0_combout ),
	.cout());
// synopsys translate_off
defparam \ALUop~0 .lut_mask = 16'hEEEE;
defparam \ALUop~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign STATE[0] = \STATE[0]~output_o ;

assign STATE[1] = \STATE[1]~output_o ;

assign STATE[2] = \STATE[2]~output_o ;

assign STATE[3] = \STATE[3]~output_o ;

assign PCWrite = \PCWrite~output_o ;

assign IRWrite = \IRWrite~output_o ;

assign IorD = \IorD~output_o ;

assign PCSource[0] = \PCSource[0]~output_o ;

assign PCSource[1] = \PCSource[1]~output_o ;

assign RegDest = \RegDest~output_o ;

assign PCWriteCond = \PCWriteCond~output_o ;

assign MemRead = \MemRead~output_o ;

assign MemWrite = \MemWrite~output_o ;

assign MemToReg = \MemToReg~output_o ;

assign ALUSelA = \ALUSelA~output_o ;

assign ALUSelB[0] = \ALUSelB[0]~output_o ;

assign ALUSelB[1] = \ALUSelB[1]~output_o ;

assign RegWrite = \RegWrite~output_o ;

assign ALUop[0] = \ALUop[0]~output_o ;

assign ALUop[1] = \ALUop[1]~output_o ;

endmodule
